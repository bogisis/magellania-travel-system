#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
 */

const http = require('http')
const https = require('https')

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ HTTP —Å—Ç–∞—Ç—É—Å–∞
function checkHttpStatus(url, timeout = 5000) {
  return new Promise((resolve) => {
    const client = url.startsWith('https') ? https : http
    
    const req = client.get(url, { timeout }, (res) => {
      resolve({
        url,
        status: res.statusCode,
        ok: res.statusCode >= 200 && res.statusCode < 300
      })
    })

    req.on('error', () => {
      resolve({
        url,
        status: 'ERROR',
        ok: false
      })
    })

    req.on('timeout', () => {
      req.destroy()
      resolve({
        url,
        status: 'TIMEOUT',
        ok: false
      })
    })
  })
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏
async function checkAllServices() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ MAGELLANIA Travel System...\n')

  const services = [
    { name: 'Frontend (Vite)', url: 'http://localhost:5173' },
    { name: 'API Server', url: 'http://localhost:3001/api/health' },
    { name: 'API Health Check', url: 'http://localhost:3001/api/health' }
  ]

  const results = await Promise.all(
    services.map(async (service) => {
      const result = await checkHttpStatus(service.url)
      return { ...service, ...result }
    })
  )

  console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏:\n')

  results.forEach((service) => {
    const status = service.ok ? '‚úÖ' : '‚ùå'
    const statusText = service.ok ? '–†–ê–ë–û–¢–ê–ï–¢' : '–ù–ï –†–ê–ë–û–¢–ê–ï–¢'
    
    console.log(`${status} ${service.name}`)
    console.log(`   URL: ${service.url}`)
    console.log(`   –°—Ç–∞—Ç—É—Å: ${statusText} (${service.status})`)
    console.log('')
  })

  // –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  const working = results.filter(r => r.ok).length
  const total = results.length

  console.log(`üìà –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: ${working}/${total} —Å–µ—Ä–≤–∏—Å–æ–≤ —Ä–∞–±–æ—Ç–∞—é—Ç`)

  if (working === total) {
    console.log('üéâ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!')
  } else {
    console.log('‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Å–µ—Ä–≤–∏—Å—ã –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏.')
  }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏
if (require.main === module) {
  checkAllServices().catch(console.error)
}

module.exports = { checkAllServices, checkHttpStatus }
