// test-calculations.js
// –†—É—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞—Å—á–µ—Ç–æ–≤ –¥–ª—è —Å–º–µ—Ç—ã ID 1

const estimateData = {
  id: 1,
  name: '–ü—Ä–µ–º–∏—É–º —Ç—É—Ä –ø–æ –ê—Ä–≥–µ–Ω—Ç–∏–Ω–µ',
  group: {
    totalPax: 8,
    doubleCount: 3,
    singleCount: 2,
    guidesCount: 1,
    markup: 15,
  },
  hotels: [
    {
      id: 'hotel-1',
      name: 'Hotel Alvear Palace',
      city: 'Buenos Aires',
      region: 'Buenos Aires',
      accommodationType: 'double',
      paxCount: 6,
      nights: 3,
      pricePerRoom: 250,
      isGuideHotel: false,
    },
    {
      id: 'hotel-2',
      name: 'Hotel Diplomatic',
      city: 'Buenos Aires',
      region: 'Buenos Aires',
      accommodationType: 'single',
      paxCount: 2,
      nights: 3,
      pricePerRoom: 180,
      isGuideHotel: true,
    },
  ],
  tourDays: [
    {
      id: 'day-1',
      dayNumber: 1,
      date: '2025-04-15',
      city: 'Buenos Aires',
      activities: [
        {
          id: 'activity-1',
          name: '–û–±–∑–æ—Ä–Ω–∞—è —ç–∫—Å–∫—É—Ä—Å–∏—è –ø–æ –≥–æ—Ä–æ–¥—É',
          description: '–ü–µ—à–µ—Ö–æ–¥–Ω–∞—è —ç–∫—Å–∫—É—Ä—Å–∏—è –ø–æ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–º—É —Ü–µ–Ω—Ç—Ä—É',
          duration: '3 —á–∞—Å–∞',
          cost: 120,
        },
      ],
    },
  ],
  optionalServices: [
    {
      id: 'service-1',
      name: '–¢—Ä–∞–Ω—Å—Ñ–µ—Ä –∏–∑ –∞—ç—Ä–æ–ø–æ—Ä—Ç–∞',
      description: '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä',
      cost: 80,
    },
  ],
}

// –§—É–Ω–∫—Ü–∏–∏ —Ä–∞—Å—á–µ—Ç–∞
function calculateRooms(hotel) {
  if (!hotel.paxCount || !hotel.accommodationType) return 0

  switch (hotel.accommodationType) {
    case 'double':
      return Math.ceil(hotel.paxCount / 2)
    case 'triple':
      return Math.ceil(hotel.paxCount / 3)
    case 'single':
    default:
      return hotel.paxCount
  }
}

function calculateHotelTotal(hotel) {
  const rooms = calculateRooms(hotel)
  return rooms * (hotel.pricePerRoom || 0) * (hotel.nights || 1)
}

function calculateDayTotal(day) {
  if (!day.activities) return 0
  return day.activities.reduce((sum, activity) => sum + (activity.cost || 0), 0)
}

function calculateBaseCost(estimate) {
  const hotelsCost = estimate.hotels
    .filter((hotel) => !hotel.isGuideHotel)
    .reduce((sum, hotel) => sum + calculateHotelTotal(hotel), 0)

  const activitiesCost = estimate.tourDays.reduce((sum, day) => {
    return sum + calculateDayTotal(day)
  }, 0)

  const optionalServicesCost = estimate.optionalServices.reduce((sum, service) => {
    return sum + (service.cost || 0)
  }, 0)

  return hotelsCost + activitiesCost + optionalServicesCost
}

function calculateMarginAmount(estimate) {
  const baseCost = calculateBaseCost(estimate)
  return (baseCost * estimate.group.markup) / 100
}

function calculateFinalCost(estimate) {
  const baseCost = calculateBaseCost(estimate)
  const marginAmount = calculateMarginAmount(estimate)
  return baseCost + marginAmount
}

// –†—É—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞—Å—á–µ—Ç–æ–≤
console.log('üßÆ –†—É—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞—Å—á–µ—Ç–æ–≤ –¥–ª—è —Å–º–µ—Ç—ã:', estimateData.name)
console.log('='.repeat(60))

// 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞—Å—á–µ—Ç–∞ –Ω–æ–º–µ—Ä–æ–≤
console.log('\n1. –†–∞—Å—á–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –Ω–æ–º–µ—Ä–æ–≤:')
estimateData.hotels.forEach((hotel, index) => {
  const rooms = calculateRooms(hotel)
  console.log(`   Hotel ${index + 1} (${hotel.name}):`)
  console.log(`     –¢–∏–ø: ${hotel.accommodationType}`)
  console.log(`     PAX: ${hotel.paxCount}`)
  console.log(`     –ù–æ–º–µ—Ä–æ–≤: ${rooms}`)
  console.log(
    `     –û–∂–∏–¥–∞–µ–º–æ: ${hotel.accommodationType === 'double' ? Math.ceil(hotel.paxCount / 2) : hotel.paxCount}`,
  )
})

// 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –≥–æ—Å—Ç–∏–Ω–∏—Ü
console.log('\n2. –†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –≥–æ—Å—Ç–∏–Ω–∏—Ü:')
let totalHotelsCost = 0
estimateData.hotels.forEach((hotel, index) => {
  const hotelTotal = calculateHotelTotal(hotel)
  const rooms = calculateRooms(hotel)
  const isGuideHotel = hotel.isGuideHotel ? ' (–ì–ò–î)' : ''

  console.log(`   Hotel ${index + 1} (${hotel.name})${isGuideHotel}:`)
  console.log(
    `     ${rooms} –Ω–æ–º–µ—Ä–æ–≤ √ó $${hotel.pricePerRoom} √ó ${hotel.nights} –Ω–æ—á–µ–π = $${hotelTotal}`,
  )

  if (!hotel.isGuideHotel) {
    totalHotelsCost += hotelTotal
  }
})
console.log(`   –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –≥–æ—Å—Ç–∏–Ω–∏—Ü (–±–µ–∑ –≥–∏–¥–∞): $${totalHotelsCost}`)

// 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π
console.log('\n3. –†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π:')
let totalActivitiesCost = 0
estimateData.tourDays.forEach((day, dayIndex) => {
  console.log(`   –î–µ–Ω—å ${dayIndex + 1} (${day.date}):`)
  day.activities.forEach((activity, actIndex) => {
    console.log(`     –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å ${actIndex + 1}: ${activity.name} = $${activity.cost}`)
    totalActivitiesCost += activity.cost
  })
})
console.log(`   –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π: $${totalActivitiesCost}`)

// 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —É—Å–ª—É–≥
console.log('\n4. –†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —É—Å–ª—É–≥:')
let totalServicesCost = 0
estimateData.optionalServices.forEach((service, index) => {
  console.log(`   –£—Å–ª—É–≥–∞ ${index + 1}: ${service.name} = $${service.cost}`)
  totalServicesCost += service.cost
})
console.log(`   –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —É—Å–ª—É–≥: $${totalServicesCost}`)

// 5. –ò—Ç–æ–≥–æ–≤—ã–µ —Ä–∞—Å—á–µ—Ç—ã
console.log('\n5. –ò—Ç–æ–≥–æ–≤—ã–µ —Ä–∞—Å—á–µ—Ç—ã:')
const baseCost = calculateBaseCost(estimateData)
const marginAmount = calculateMarginAmount(estimateData)
const finalCost = calculateFinalCost(estimateData)

console.log(
  `   –ë–∞–∑–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: $${totalHotelsCost} + $${totalActivitiesCost} + $${totalServicesCost} = $${baseCost}`,
)
console.log(
  `   –ú–∞—Ä–∂–∞ (${estimateData.group.markup}%): $${baseCost} √ó ${estimateData.group.markup}% = $${marginAmount}`,
)
console.log(`   –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: $${baseCost} + $${marginAmount} = $${finalCost}`)

// 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—à–∏–±–∫–∏
console.log('\n6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—à–∏–±–∫–∏:')
const errors = []

if (baseCost <= 0) {
  errors.push('–ë–∞–∑–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 0')
}

if (finalCost <= 0) {
  errors.push('–§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 0')
}

if (baseCost > 1000000) {
  errors.push('–ë–∞–∑–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ –≤—ã—Å–æ–∫–∞ (>$1M)')
}

if (finalCost > 1000000) {
  errors.push('–§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ –≤—ã—Å–æ–∫–∞ (>$1M)')
}

if (errors.length > 0) {
  console.log('   ‚ùå –ù–∞–π–¥–µ–Ω—ã –æ—à–∏–±–∫–∏:')
  errors.forEach((error) => console.log(`      - ${error}`))
} else {
  console.log('   ‚úÖ –í—Å–µ —Ä–∞—Å—á–µ—Ç—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã!')
}

console.log('\n' + '='.repeat(60))
console.log('üìä –†–ï–ó–Æ–ú–ï:')
console.log(`   –ë–∞–∑–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: $${baseCost}`)
console.log(`   –ú–∞—Ä–∂–∞: $${marginAmount}`)
console.log(`   –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: $${finalCost}`)
console.log(`   –û—à–∏–±–æ–∫: ${errors.length}`)
