#!/usr/bin/env node

/**
 * –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö –ø—Ä–æ–±–ª–µ–º MAGELLANIA Travel System
 */

const { execSync, spawn } = require('child_process')
const fs = require('fs')
const path = require('path')

console.log('üîß MAGELLANIA Travel System - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º\n')

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥
function runCommand(command, description) {
  try {
    console.log(`üìã ${description}...`)
    const result = execSync(command, {
      encoding: 'utf8',
      stdio: 'pipe',
      cwd: process.cwd(),
    })
    console.log(`‚úÖ ${description} - –£–°–ü–ï–®–ù–û`)
    return result
  } catch (error) {
    console.log(`‚ùå ${description} - –û–®–ò–ë–ö–ê: ${error.message}`)
    return null
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
function killProcesses() {
  console.log('üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤...')

  const processes = ['vite', 'node.*working-server', 'concurrently', 'nodemon']

  processes.forEach((processName) => {
    try {
      execSync(`pkill -f "${processName}"`, { stdio: 'ignore' })
    } catch (error) {
      // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
    }
  })

  console.log('‚úÖ –í—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã')
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫–µ—à–∞
function clearCache() {
  console.log('üßπ –û—á–∏—Å—Ç–∫–∞ –∫–µ—à–∞...')

  const cacheDirs = ['node_modules/.cache', 'dist', '.vite']

  cacheDirs.forEach((dir) => {
    if (fs.existsSync(dir)) {
      try {
        execSync(`rm -rf ${dir}`)
        console.log(`‚úÖ –£–¥–∞–ª–µ–Ω –∫–µ—à: ${dir}`)
      } catch (error) {
        console.log(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å: ${dir}`)
      }
    }
  })
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Ä—Ç–æ–≤
function checkPorts() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤...')

  const ports = [3001, 5173, 5174]

  ports.forEach((port) => {
    try {
      execSync(`lsof -ti:${port}`, { stdio: 'ignore' })
      console.log(`‚ö†Ô∏è –ü–æ—Ä—Ç ${port} –∑–∞–Ω—è—Ç`)
    } catch (error) {
      console.log(`‚úÖ –ü–æ—Ä—Ç ${port} —Å–≤–æ–±–æ–¥–µ–Ω`)
    }
  })
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
function installDependencies() {
  console.log('üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...')

  // –û—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
  runCommand('npm install', '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π')

  // API —Å–µ—Ä–≤–µ—Ä –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
  if (fs.existsSync('api-server')) {
    console.log('üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π API —Å–µ—Ä–≤–µ—Ä–∞...')
    runCommand('cd api-server && npm install', '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π API')
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–∞–π–ª–æ–≤
function checkFiles() {
  console.log('üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤...')

  const requiredFiles = [
    'package.json',
    'vite.config.js',
    'src/main.js',
    'api-server/working-server.js',
    'api-server/package.json',
  ]

  requiredFiles.forEach((file) => {
    if (fs.existsSync(file)) {
      console.log(`‚úÖ ${file}`)
    } else {
      console.log(`‚ùå ${file} - –û–¢–°–£–¢–°–¢–í–£–ï–¢`)
    }
  })
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API —Å–µ—Ä–≤–µ—Ä–∞
function testApiServer() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Å–µ—Ä–≤–µ—Ä–∞...')

  return new Promise((resolve) => {
    const apiProcess = spawn('node', ['working-server.js'], {
      cwd: path.join(process.cwd(), 'api-server'),
      stdio: 'pipe',
    })

    let output = ''

    apiProcess.stdout.on('data', (data) => {
      output += data.toString()
      if (output.includes('API —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω')) {
        console.log('‚úÖ API —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ')
        apiProcess.kill()
        resolve(true)
      }
    })

    apiProcess.stderr.on('data', (data) => {
      console.log(`‚ùå API —Å–µ—Ä–≤–µ—Ä –æ—à–∏–±–∫–∞: ${data.toString()}`)
    })

    // –¢–∞–π–º–∞—É—Ç
    setTimeout(() => {
      if (!output.includes('API —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω')) {
        console.log('‚ùå API —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 10 —Å–µ–∫—É–Ω–¥')
        apiProcess.kill()
        resolve(false)
      }
    }, 10000)
  })
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
function testFrontend() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞...')

  return new Promise((resolve) => {
    const frontendProcess = spawn('npm', ['run', 'dev'], {
      stdio: 'pipe',
    })

    let output = ''

    frontendProcess.stdout.on('data', (data) => {
      output += data.toString()
      if (output.includes('Local:') && output.includes('http://localhost:')) {
        console.log('‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ')
        frontendProcess.kill()
        resolve(true)
      }
    })

    frontendProcess.stderr.on('data', (data) => {
      console.log(`‚ùå –§—Ä–æ–Ω—Ç–µ–Ω–¥ –æ—à–∏–±–∫–∞: ${data.toString()}`)
    })

    // –¢–∞–π–º–∞—É—Ç
    setTimeout(() => {
      if (!output.includes('Local:')) {
        console.log('‚ùå –§—Ä–æ–Ω—Ç–µ–Ω–¥ –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 15 —Å–µ–∫—É–Ω–¥')
        frontendProcess.kill()
        resolve(false)
      }
    }, 15000)
  })
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function fixAll() {
  console.log('üöÄ –ù–∞—á–∞–ª–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º...\n')

  // 1. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
  killProcesses()

  // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
  checkFiles()

  // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
  checkPorts()

  // 4. –û—á–∏—Å—Ç–∫–∞ –∫–µ—à–∞
  clearCache()

  // 5. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
  installDependencies()

  // 6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Å–µ—Ä–≤–µ—Ä–∞
  console.log('\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...')
  const apiOk = await testApiServer()

  // 7. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
  const frontendOk = await testFrontend()

  // –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
  console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:')
  console.log(`API —Å–µ—Ä–≤–µ—Ä: ${apiOk ? '‚úÖ –†–ê–ë–û–¢–ê–ï–¢' : '‚ùå –ù–ï –†–ê–ë–û–¢–ê–ï–¢'}`)
  console.log(`–§—Ä–æ–Ω—Ç–µ–Ω–¥: ${frontendOk ? '‚úÖ –†–ê–ë–û–¢–ê–ï–¢' : '‚ùå –ù–ï –†–ê–ë–û–¢–ê–ï–¢'}`)

  if (apiOk && frontendOk) {
    console.log('\nüéâ –í—Å–µ –ø—Ä–æ–±–ª–µ–º—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!')
    console.log('\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:')
    console.log('1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: npm run dev:full')
    console.log('2. –û—Ç–∫—Ä–æ–π—Ç–µ: http://localhost:5173')
    console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –º–∏–≥—Ä–∞—Ü–∏—é: http://localhost:5173/migration')
  } else {
    console.log('\n‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –æ—Å—Ç–∞–ª–∏—Å—å')
    console.log('\nüîß –†—É—á–Ω—ã–µ —à–∞–≥–∏:')
    console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ')
    console.log('2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–æ—Ä—Ç—ã 3001 –∏ 5173 —Å–≤–æ–±–æ–¥–Ω—ã')
    console.log('3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏')
  }
}

// –ó–∞–ø—É—Å–∫
if (require.main === module) {
  fixAll().catch(console.error)
}

module.exports = { fixAll }
