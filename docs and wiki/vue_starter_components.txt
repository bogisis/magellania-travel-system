<!-- ===== –û–°–ù–û–í–ù–û–ô –ö–û–ú–ü–û–ù–ï–ù–¢ –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø ===== -->
<!-- src/App.vue -->
<template>
  <div id="app" class="min-h-screen bg-gray-50">
    <!-- Header -->
    <AppHeader />
    
    <!-- Navigation -->
    <AppNavigation />
    
    <!-- Main Content -->
    <main class="flex-1">
      <div class="container mx-auto px-6 py-8">
        <router-view />
      </div>
    </main>
    
    <!-- Toast Notifications -->
    <ToastContainer />
  </div>
</template>

<script setup>
import { onMounted } from 'vue'
import { useEstimateStore } from '@/stores/estimateStore'
import AppHeader from '@/components/layout/AppHeader.vue'
import AppNavigation from '@/components/layout/AppNavigation.vue'
import ToastContainer from '@/components/common/ToastContainer.vue'

const estimateStore = useEstimateStore()

onMounted(async () => {
  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–º–µ—Ç—ã –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  await estimateStore.loadAllEstimates()
})
</script>

<!-- ===== –ó–ê–ì–û–õ–û–í–û–ö –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø ===== -->
<!-- src/components/layout/AppHeader.vue -->
<template>
  <header class="bg-gradient-to-r from-blue-500 to-purple-600 text-white shadow-lg">
    <div class="container mx-auto px-6 py-6">
      <div class="flex items-center justify-between">
        <div class="flex items-center space-x-4">
          <div class="text-3xl">üó∫Ô∏è</div>
          <div>
            <h1 class="text-2xl font-bold company-logo">
              {{ companyName }}
            </h1>
            <p class="opacity-90 text-sm">{{ tagline }}</p>
          </div>
        </div>
        
        <div class="flex items-center space-x-4">
          <!-- –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è -->
          <button 
            class="relative p-2 hover:bg-white/20 rounded-lg transition-colors"
            @click="toggleNotifications"
          >
            <Bell :size="20" />
            <span 
              v-if="unreadCount > 0"
              class="absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center"
            >
              {{ unreadCount }}
            </span>
          </button>
          
          <!-- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å -->
          <div class="flex items-center space-x-3">
            <span class="text-sm opacity-90">
              –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {{ userName }}
            </span>
            <div 
              class="w-10 h-10 bg-white/20 rounded-full flex items-center justify-center cursor-pointer hover:bg-white/30 transition-colors"
              @click="toggleUserMenu"
            >
              <User :size="20" />
            </div>
          </div>
        </div>
      </div>
    </div>
  </header>
</template>

<script setup>
import { ref, computed } from 'vue'
import { Bell, User } from 'lucide-vue-next'

// –î–∞–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏
const companyName = ref('Magellania Travel System')
const tagline = ref('–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–≥—Ä–∞–º–º')

// –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const userName = ref('–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞')
const unreadCount = computed(() => 3) // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π

// –ú–µ—Ç–æ–¥—ã
const toggleNotifications = () => {
  console.log('Toggle notifications')
}

const toggleUserMenu = () => {
  console.log('Toggle user menu')  
}
</script>

<!-- ===== –ù–ê–í–ò–ì–ê–¶–ò–Ø ===== -->
<!-- src/components/layout/AppNavigation.vue -->
<template>
  <nav class="bg-white border-b-2 border-gray-200 sticky top-0 z-10">
    <div class="container mx-auto px-6">
      <div class="flex space-x-0 overflow-x-auto">
        <router-link
          v-for="tab in navigationTabs"
          :key="tab.name"
          :to="tab.path"
          class="nav-tab"
          :class="{ 'active': $route.path === tab.path }"
        >
          <span class="text-lg mr-2">{{ tab.icon }}</span>
          {{ tab.label }}
        </router-link>
      </div>
    </div>
  </nav>
</template>

<script setup>
import { ref } from 'vue'

const navigationTabs = ref([
  { name: 'dashboard', path: '/', icon: 'üè†', label: '–ì–ª–∞–≤–Ω–∞—è' },
  { name: 'estimates', path: '/estimates', icon: 'üìä', label: '–°–º–µ—Ç—ã' },
  { name: 'editor', path: '/editor', icon: '‚úèÔ∏è', label: '–†–µ–¥–∞–∫—Ç–æ—Ä' },
  { name: 'optional', path: '/optional', icon: '‚≠ê', label: '–î–æ–ø. —É—Å–ª—É–≥–∏' },
  { name: 'preview', path: '/preview', icon: 'üëÅÔ∏è', label: '–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä' },
])
</script>

<style scoped>
.nav-tab {
  @apply px-6 py-4 border-b-3 border-transparent font-medium transition-all text-gray-600 hover:bg-gray-50 flex items-center whitespace-nowrap;
}

.nav-tab.active {
  @apply border-blue-500 text-blue-600 bg-blue-50;
}
</style>

<!-- ===== –§–û–†–ú–ê –û–°–ù–û–í–ù–û–ô –ò–ù–§–û–†–ú–ê–¶–ò–ò –û –¢–£–†–ï ===== -->
<!-- src/components/estimate/TourInfoForm.vue -->
<template>
  <div class="card">
    <div class="card-header">
      <h2 class="text-xl font-semibold text-gray-900">
        üìã –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç—É—Ä–µ
      </h2>
    </div>
    
    <div class="card-body">
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        <!-- –ù–∞–∑–≤–∞–Ω–∏–µ —Ç—É—Ä–∞ -->
        <div class="form-group">
          <label class="form-label">–ù–∞–∑–≤–∞–Ω–∏–µ —Ç—É—Ä–∞</label>
          <input 
            v-model="tourInfo.tourName"
            type="text"
            class="form-control"
            placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç—É—Ä–∞"
            @input="handleTourInfoChange"
          />
        </div>
        
        <!-- –°—Ç—Ä–∞–Ω–∞ -->
        <div class="form-group">
          <label class="form-label">–°—Ç—Ä–∞–Ω–∞</label>
          <select 
            v-model="tourInfo.country"
            class="form-control"
            @change="handleCountryChange"
          >
            <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É</option>
            <option 
              v-for="country in countries"
              :key="country.code"
              :value="country.code"
            >
              {{ country.flag }} {{ country.name }}
            </option>
          </select>
        </div>
        
        <!-- –†–µ–≥–∏–æ–Ω -->
        <div class="form-group">
          <label class="form-label">–†–µ–≥–∏–æ–Ω</label>
          <select 
            v-model="tourInfo.region"
            class="form-control"
            :disabled="!tourInfo.country"
            @change="handleTourInfoChange"
          >
            <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω</option>
            <option 
              v-for="region in availableRegions"
              :key="region"
              :value="region"
            >
              {{ region }}
            </option>
          </select>
        </div>
        
        <!-- –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ -->
        <div class="form-group">
          <label class="form-label">–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞</label>
          <input 
            v-model="tourInfo.startDate"
            type="date"
            class="form-control"
            @change="handleDateChange"
          />
        </div>
        
        <!-- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π -->
        <div class="form-group">
          <label class="form-label">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π</label>
          <input 
            v-model.number="tourInfo.duration"
            type="number"
            min="1"
            max="365"
            class="form-control"
            @input="handleDurationChange"
          />
        </div>
        
        <!-- –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è -->
        <div class="form-group">
          <label class="form-label">–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è</label>
          <input 
            v-model="tourInfo.endDate"
            type="date"
            class="form-control"
            @change="handleEndDateChange"
          />
        </div>
        
        <!-- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—É—Ä–∏—Å—Ç–æ–≤ -->
        <div class="form-group">
          <label class="form-label">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—É—Ä–∏—Å—Ç–æ–≤</label>
          <input 
            v-model.number="tourInfo.touristCount"
            type="number"
            min="1"
            max="50"
            class="form-control"
            @input="handleTourInfoChange"
          />
        </div>
        
        <!-- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–∏–¥–æ–≤ -->
        <div class="form-group">
          <label class="form-label">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–∏–¥–æ–≤</label>
          <input 
            v-model.number="tourInfo.guideCount"
            type="number"
            min="0"
            max="10"
            class="form-control"
            @input="handleTourInfoChange"
          />
        </div>
      </div>
      
      <!-- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ -->
      <div class="mt-8 p-4 bg-gray-50 rounded-lg">
        <h3 class="text-lg font-medium text-gray-900 mb-4">
          üë• –†–∞–∑–º–µ—â–µ–Ω–∏–µ —Ç—É—Ä–∏—Å—Ç–æ–≤
        </h3>
        
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div class="form-group">
            <label class="form-label">–î–≤—É—Ö–º–µ—Å—Ç–Ω–æ–µ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ</label>
            <div class="flex space-x-4">
              <input 
                v-model.number="accommodation.double.count"
                type="number"
                min="0"
                class="form-control flex-1"
                placeholder="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ"
                @input="handleTourInfoChange"
              />
              <input 
                v-model.number="accommodation.double.price"
                type="number"
                min="0"
                step="0.01"
                class="form-control flex-1"
                placeholder="–¶–µ–Ω–∞ –∑–∞ —á–µ–ª."
                @input="handleTourInfoChange"
              />
            </div>
          </div>
          
          <div class="form-group">
            <label class="form-label">–û–¥–Ω–æ–º–µ—Å—Ç–Ω–æ–µ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ</label>
            <div class="flex space-x-4">
              <input 
                v-model.number="accommodation.single.count"
                type="number"
                min="0"
                class="form-control flex-1"
                placeholder="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ"
                @input="handleTourInfoChange"
              />
              <input 
                v-model.number="accommodation.single.price"
                type="number"
                min="0"
                step="0.01"
                class="form-control flex-1"
                placeholder="–¶–µ–Ω–∞ –∑–∞ —á–µ–ª."
                @input="handleTourInfoChange"
              />
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</template>

<script setup>
import { ref, computed, watch } from 'vue'
import { useEstimateStore } from '@/stores/estimateStore'
import { addDays, parseISO, formatISO } from 'date-fns'

const estimateStore = useEstimateStore()

// –î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
const tourInfo = ref({
  tourName: '–ù–æ–≤—ã–π —Ç—É—Ä',
  country: 'argentina',
  region: '',
  startDate: '',
  duration: 7,
  endDate: '',
  touristCount: 4,
  guideCount: 1
})

const accommodation = ref({
  double: { count: 2, price: 100 },
  single: { count: 0, price: 150 }
})

// –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏
const countries = ref([
  { code: 'argentina', name: '–ê—Ä–≥–µ–Ω—Ç–∏–Ω–∞', flag: 'üá¶üá∑' },
  { code: 'chile', name: '–ß–∏–ª–∏', flag: 'üá®üá±' },
  { code: 'peru', name: '–ü–µ—Ä—É', flag: 'üáµüá™' },
  { code: 'bolivia', name: '–ë–æ–ª–∏–≤–∏—è', flag: 'üáßüá¥' },
  { code: 'ecuador', name: '–≠–∫–≤–∞–¥–æ—Ä', flag: 'üá™üá®' },
])

const regionsByCountry = ref({
  argentina: ['–ë—É—ç–Ω–æ—Å-–ê–π—Ä–µ—Å', '–ü–∞—Ç–∞–≥–æ–Ω–∏—è', '–ú–µ–Ω–¥–æ—Å–∞', '–°–∞–ª—å—Ç–∞', '–£—à—É–∞—è'],
  chile: ['–°–∞–Ω—Ç—å—è–≥–æ', '–ê—Ç–∞–∫–∞–º–∞', '–ü–∞—Ç–∞–≥–æ–Ω–∏—è', '–û—Å—Ç—Ä–æ–≤ –ü–∞—Å—Ö–∏'],
  peru: ['–õ–∏–º–∞', '–ö—É—Å–∫–æ', '–ê—Ä–µ–∫–∏–ø–∞', '–ê–º–∞–∑–æ–Ω–∏—è'],
  bolivia: ['–õ–∞-–ü–∞—Å', '–°–æ–ª–æ–Ω—á–∞–∫ –£—é–Ω–∏', '–¢–∏—Ä–∞—É–∞'],
  ecuador: ['–ö–∏—Ç–æ', '–ì–∞–ª–∞–ø–∞–≥–æ—Å—ã', '–ë–∞–Ω—å–æ—Å']
})

// –í—ã—á–∏—Å–ª—è–µ–º—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞
const availableRegions = computed(() => {
  return tourInfo.value.country ? regionsByCountry.value[tourInfo.value.country] || [] : []
})

// –ú–µ—Ç–æ–¥—ã
const handleCountryChange = () => {
  tourInfo.value.region = ''
  handleTourInfoChange()
}

const handleDateChange = () => {
  if (tourInfo.value.startDate && tourInfo.value.duration) {
    const startDate = parseISO(tourInfo.value.startDate)
    const endDate = addDays(startDate, tourInfo.value.duration - 1)
    tourInfo.value.endDate = formatISO(endDate, { representation: 'date' })
  }
  handleTourInfoChange()
}

const handleDurationChange = () => {
  if (tourInfo.value.startDate && tourInfo.value.duration > 0) {
    const startDate = parseISO(tourInfo.value.startDate)
    const endDate = addDays(startDate, tourInfo.value.duration - 1)
    tourInfo.value.endDate = formatISO(endDate, { representation: 'date' })
  }
  handleTourInfoChange()
}

const handleEndDateChange = () => {
  if (tourInfo.value.startDate && tourInfo.value.endDate) {
    const startDate = parseISO(tourInfo.value.startDate)
    const endDate = parseISO(tourInfo.value.endDate)
    const diffTime = Math.abs(endDate - startDate)
    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24)) + 1
    tourInfo.value.duration = diffDays
  }
  handleTourInfoChange()
}

const handleTourInfoChange = () => {
  // –û–±–Ω–æ–≤–ª—è–µ–º store —Å –Ω–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
  estimateStore.updateTourInfo({
    ...tourInfo.value,
    accommodation: accommodation.value
  })
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ store
watch(() => estimateStore.currentEstimate, (newEstimate) => {
  if (newEstimate && newEstimate.tourInfo) {
    Object.assign(tourInfo.value, newEstimate.tourInfo)
    if (newEstimate.tourInfo.accommodation) {
      Object.assign(accommodation.value, newEstimate.tourInfo.accommodation)
    }
  }
}, { immediate: true })
</script>

<!-- ===== –ö–û–ú–ü–û–ù–ï–ù–¢ –î–ù–Ø –¢–£–†–ê ===== -->
<!-- src/components/estimate/DaySection.vue -->
<template>
  <div class="day-section" :class="{ 'dragging': isDragging }">
    <!-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–Ω—è -->
    <div class="day-header">
      <div class="flex items-center space-x-4">
        <button 
          class="drag-handle cursor-grab active:cursor-grabbing"
          @mousedown="handleDragStart"
        >
          <GripVertical :size="20" />
        </button>
        
        <div>
          <h3 class="text-lg font-semibold">
            üìÖ –î–µ–Ω—å {{ day.dayNumber }} ‚Ä¢ {{ formatDate(day.date) }}
          </h3>
          <input 
            v-model="day.title"
            class="bg-transparent border-none text-white placeholder-white/70 text-base font-normal outline-none w-full"
            placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –¥–Ω—è..."
            @input="handleDayUpdate"
          />
        </div>
      </div>
      
      <div class="flex items-center space-x-4">
        <span class="text-xl font-bold">
          üí∞ ${{ dayTotal }}
        </span>
        <button 
          class="hover:bg-white/20 p-2 rounded-lg transition-colors"
          @click="toggleExpanded"
        >
          <ChevronDown 
            :size="20" 
            :class="{ 'rotate-180': !isExpanded }"
            class="transition-transform"
          />
        </button>
        <button 
          class="hover:bg-white/20 p-2 rounded-lg transition-colors text-red-300 hover:text-red-100"
          @click="handleDeleteDay"
        >
          <Trash2 :size="20" />
        </button>
      </div>
    </div>
    
    <!-- –ö–æ–Ω—Ç–µ–Ω—Ç –¥–Ω—è -->
    <div v-show="isExpanded" class="divide-y divide-gray-100">
      <!-- –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ -->
      <div class="space-y-0">
        <ActivityRow
          v-for="(activity, index) in day.activities"
          :key="activity.id"
          :activity="activity"
          :day-id="day.id"
          :activity-index="index"
          @update="handleActivityUpdate"
          @delete="handleActivityDelete"
        />
      </div>
      
      <!-- –û—Ç–µ–ª–∏ -->
      <div v-if="day.hotels && day.hotels.length > 0" class="p-4 bg-blue-50">
        <h4 class="text-sm font-medium text-gray-700 mb-3 flex items-center">
          <Hotel :size="16" class="mr-2" />
          üè® –†–∞–∑–º–µ—â–µ–Ω–∏–µ
        </h4>
        <div class="space-y-2">
          <div 
            v-for="hotel in day.hotels"
            :key="hotel.id"
            class="flex items-center justify-between p-2 bg-white rounded border"
          >
            <div class="flex-1">
              <input 
                v-model="hotel.name"
                class="border-none bg-transparent w-full font-medium"
                placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ç–µ–ª—è..."
                @input="handleDayUpdate"
              />
              <div class="flex items-center space-x-4 text-sm text-gray-600 mt-1">
                <label class="flex items-center">
                  <input 
                    v-model.number="hotel.pax"
                    type="number"
                    min="1"
                    class="w-16 px-2 py-1 border rounded text-center"
                    @input="calculateHotelRooms(hotel)"
                  />
                  <span class="ml-1">—á–µ–ª.</span>
                </label>
                <span>{{ hotel.rooms }} –Ω–æ–º–µ—Ä–æ–≤</span>
                <label class="flex items-center">
                  <input 
                    v-model="hotel.isForGuide"
                    type="checkbox"
                    class="mr-1"
                    @change="handleDayUpdate"
                  />
                  –¥–ª—è –≥–∏–¥–∞
                </label>
              </div>
            </div>
            <div class="text-right">
              <div class="font-semibold">${{ hotel.total }}</div>
              <div class="text-sm text-gray-500">
                ${{ hotel.pricePerRoom }}/–Ω–æ–º–µ—Ä
              </div>
            </div>
          </div>
        </div>
        <button 
          class="mt-2 text-blue-600 text-sm hover:text-blue-800 flex items-center"
          @click="addHotel"
        >
          <Plus :size="16" class="mr-1" />
          –î–æ–±–∞–≤–∏—Ç—å –æ—Ç–µ–ª—å
        </button>
      </div>
      
      <!-- –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π -->
      <div class="p-4 bg-gray-50">
        <div class="flex flex-wrap gap-2">
          <button 
            class="btn-secondary btn-sm"
            @click="addActivity"
          >
            <Plus :size="16" />
            –î–æ–±–∞–≤–∏—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
          </button>
          <button 
            class="btn-secondary btn-sm"
            @click="addHotel"
          >
            <Hotel :size="16" />
            –î–æ–±–∞–≤–∏—Ç—å –æ—Ç–µ–ª—å
          </button>
          <button 
            class="btn-secondary btn-sm"
            @click="duplicateDay"
          >
            <Copy :size="16" />
            –î—É–±–ª–∏—Ä–æ–≤–∞—Ç—å –¥–µ–Ω—å
          </button>
        </div>
      </div>
    </div>
  </div>
</template>

<script setup>
import { ref, computed } from 'vue'
import { 
  GripVertical, ChevronDown, Trash2, Plus, 
  Hotel, Copy 
} from 'lucide-vue-next'
import { format, parseISO } from 'date-fns'
import { ru } from 'date-fns/locale'
import ActivityRow from './ActivityRow.vue'
import { useEstimateStore } from '@/stores/estimateStore'

// Props
const props = defineProps({
  day: {
    type: Object,
    required: true
  }
})

// Emits
const emit = defineEmits(['update', 'delete', 'duplicate'])

const estimateStore = useEstimateStore()

// –õ–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
const isExpanded = ref(true)
const isDragging = ref(false)

// –í—ã—á–∏—Å–ª—è–µ–º—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞
const dayTotal = computed(() => {
  let total = 0
  
  // –°—É–º–º–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π
  if (props.day.activities) {
    total += props.day.activities.reduce((sum, activity) => {
      return sum + (activity.quantity * activity.pricePerUnit)
    }, 0)
  }
  
  // –°—É–º–º–∞ –æ—Ç–µ–ª–µ–π
  if (props.day.hotels) {
    total += props.day.hotels.reduce((sum, hotel) => {
      return sum + hotel.total
    }, 0)
  }
  
  return total.toFixed(2)
})

// –ú–µ—Ç–æ–¥—ã
const formatDate = (dateString) => {
  try {
    return format(parseISO(dateString), 'd MMMM', { locale: ru })
  } catch {
    return dateString
  }
}

const toggleExpanded = () => {
  isExpanded.value = !isExpanded.value
}

const handleDragStart = () => {
  isDragging.value = true
  // –õ–æ–≥–∏–∫–∞ drag & drop –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–∑–∂–µ
}

const handleDayUpdate = () => {
  emit('update', props.day)
}

const handleDeleteDay = () => {
  if (confirm('–£–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –¥–µ–Ω—å?')) {
    emit('delete', props.day.id)
  }
}

const addActivity = () => {
  const newActivity = {
    id: `activity_${Date.now()}`,
    type: 'other',
    description: '',
    quantity: 1,
    pricePerUnit: 0,
    supplier: ''
  }
  
  if (!props.day.activities) {
    props.day.activities = []
  }
  
  props.day.activities.push(newActivity)
  handleDayUpdate()
}

const addHotel = () => {
  const newHotel = {
    id: `hotel_${Date.now()}`,
    name: '',
    pax: 2,
    rooms: 1,
    pricePerRoom: 100,
    total: 100,
    isForGuide: false
  }
  
  if (!props.day.hotels) {
    props.day.hotels = []
  }
  
  props.day.hotels.push(newHotel)
  handleDayUpdate()
}

const calculateHotelRooms = (hotel) => {
  // –û–∫—Ä—É–≥–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–º–µ—Ä–æ–≤ –≤–≤–µ—Ä—Ö –¥–ª—è –Ω–µ—á–µ—Ç–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≥–æ—Å—Ç–µ–π
  hotel.rooms = Math.ceil(hotel.pax / 2)
  hotel.total = hotel.rooms * hotel.pricePerRoom
  handleDayUpdate()
}

const duplicateDay = () => {
  emit('duplicate', props.day.id)
}

const handleActivityUpdate = (activity) => {
  handleDayUpdate()
}

const handleActivityDelete = (activityId) => {
  const index = props.day.activities.findIndex(a => a.id === activityId)
  if (index > -1) {
    props.day.activities.splice(index, 1)
    handleDayUpdate()
  }
}
</script>

<!-- ===== –°–¢–†–û–ö–ê –ê–ö–¢–ò–í–ù–û–°–¢–ò ===== -->
<!-- src/components/estimate/ActivityRow.vue -->
<template>
  <div 
    class="activity-row"
    :class="{ 'dragging': isDragging }"
    draggable="true"
    @dragstart="handleDragStart"
    @dragend="handleDragEnd"
  >
    <div class="flex items-center gap-4">
      <!-- –ò–∫–æ–Ω–∫–∞ —Ç–∏–ø–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ -->
      <div class="flex-shrink-0">
        <span class="text-2xl">{{ getActivityIcon(activity.type) }}</span>
      </div>
      
      <!-- –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è -->
      <div class="flex-1 grid grid-cols-1 md:grid-cols-5 gap-4 items-center">
        <!-- –¢–∏–ø –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ -->
        <div class="form-group mb-0">
          <select 
            v-model="activity.type"
            class="form-control text-xs"
            @change="handleActivityUpdate"
          >
            <option value="transport">üöó –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç</option>
            <option value="hotel">üè® –û—Ç–µ–ª—å</option>
            <option value="meal">üçΩÔ∏è –ü–∏—Ç–∞–Ω–∏–µ</option>
            <option value="excursion">üéØ –≠–∫—Å–∫—É—Ä—Å–∏—è</option>
            <option value="flight">‚úàÔ∏è –ü–µ—Ä–µ–ª–µ—Ç</option>
            <option value="entrance">üé´ –í—Ö–æ–¥–Ω—ã–µ –±–∏–ª–µ—Ç—ã</option>
            <option value="guide">üë®‚Äçüè´ –ì–∏–¥</option>
            <option value="other">üìã –ü—Ä–æ—á–µ–µ</option>
          </select>
        </div>
        
        <!-- –û–ø–∏—Å–∞–Ω–∏–µ -->
        <div class="form-group mb-0 md:col-span-2">
          <input 
            v-model="activity.description"
            type="text"
            class="form-control text-sm"
            placeholder="–û–ø–∏—Å–∞–Ω–∏–µ —É—Å–ª—É–≥–∏..."
            @input="handleActivityUpdate"
          />
        </div>
        
        <!-- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ -->
        <div class="form-group mb-0">
          <input 
            v-model.number="activity.quantity"
            type="number"
            min="0"
            step="0.01"
            class="form-control text-sm text-center"
            @input="handleActivityUpdate"
          />
        </div>
        
        <!-- –¶–µ–Ω–∞ –∑–∞ –µ–¥–∏–Ω–∏—Ü—É -->
        <div class="form-group mb-0">
          <input 
            v-model.number="activity.pricePerUnit"
            type="number"
            min="0"
            step="0.01"
            class="form-control text-sm text-center"
            @input="handleActivityUpdate"
          />
        </div>
      </div>
      
      <!-- –ò—Ç–æ–≥–æ –∏ –¥–µ–π—Å—Ç–≤–∏—è -->
      <div class="flex-shrink-0 flex items-center gap-4">
        <div class="text-right min-w-[80px]">
          <div class="font-semibold text-gray-900">
            ${{ activityTotal }}
          </div>
          <div class="text-xs text-gray-500">
            –∏—Ç–æ–≥–æ
          </div>
        </div>
        
        <!-- –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π -->
        <div class="flex space-x-1">
          <button 
            class="p-1 text-gray-400 hover:text-blue-600 hover:bg-blue-50 rounded transition-colors"
            title="–î—É–±–ª–∏—Ä–æ–≤–∞—Ç—å"
            @click="handleDuplicate"
          >
            <Copy :size="14" />
          </button>
          <button 
            class="p-1 text-gray-400 hover:text-red-600 hover:bg-red-50 rounded transition-colors"
            title="–£–¥–∞–ª–∏—Ç—å"
            @click="handleDelete"
          >
            <Trash2 :size="14" />
          </button>
        </div>
      </div>
    </div>
    
    <!-- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è -->
    <div v-if="activity.supplier || activity.notes" class="mt-2 pt-2 border-t border-gray-100">
      <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
        <div v-if="activity.supplier" class="text-xs text-gray-600">
          <span class="font-medium">–ü–æ—Å—Ç–∞–≤—â–∏–∫:</span> {{ activity.supplier }}
        </div>
        <div v-if="activity.notes" class="text-xs text-gray-600">
          <span class="font-medium">–ó–∞–º–µ—Ç–∫–∏:</span> {{ activity.notes }}
        </div>
      </div>
    </div>
  </div>
</template>

<script setup>
import { ref, computed } from 'vue'
import { Copy, Trash2 } from 'lucide-vue-next'

// Props
const props = defineProps({
  activity: {
    type: Object,
    required: true
  },
  dayId: {
    type: String,
    required: true
  },
  activityIndex: {
    type: Number,
    required: true
  }
})

// Emits
const emit = defineEmits(['update', 'delete', 'duplicate'])

// –õ–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
const isDragging = ref(false)

// –í—ã—á–∏—Å–ª—è–µ–º—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞
const activityTotal = computed(() => {
  const total = (props.activity.quantity || 0) * (props.activity.pricePerUnit || 0)
  return total.toFixed(2)
})

// –ú–µ—Ç–æ–¥—ã
const getActivityIcon = (type) => {
  const icons = {
    transport: 'üöó',
    hotel: 'üè®',
    meal: 'üçΩÔ∏è',
    excursion: 'üéØ',
    flight: '‚úàÔ∏è',
    entrance: 'üé´',
    guide: 'üë®‚Äçüè´',
    other: 'üìã'
  }
  return icons[type] || 'üìã'
}

const handleActivityUpdate = () => {
  emit('update', props.activity)
}

const handleDelete = () => {
  if (confirm('–£–¥–∞–ª–∏—Ç—å —ç—Ç—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å?')) {
    emit('delete', props.activity.id)
  }
}

const handleDuplicate = () => {
  const duplicated = {
    ...props.activity,
    id: `activity_${Date.now()}`,
    description: `${props.activity.description} (–∫–æ–ø–∏—è)`
  }
  emit('duplicate', duplicated)
}

const handleDragStart = (event) => {
  isDragging.value = true
  event.dataTransfer.setData('application/json', JSON.stringify({
    type: 'activity',
    dayId: props.dayId,
    activityIndex: props.activityIndex,
    activity: props.activity
  }))
}

const handleDragEnd = () => {
  isDragging.value = false
}
</script>

<!-- ===== –ö–û–ù–¢–ï–ô–ù–ï–† –£–í–ï–î–û–ú–õ–ï–ù–ò–ô ===== -->
<!-- src/components/common/ToastContainer.vue -->
<template>
  <teleport to="body">
    <div class="toast-container">
      <transition-group name="toast" tag="div">
        <div
          v-for="toast in toasts"
          :key="toast.id"
          class="toast"
          :class="`toast-${toast.type}`"
        >
          <div class="flex items-center gap-3">
            <div class="toast-icon">
              <component :is="getIcon(toast.type)" :size="20" />
            </div>
            <div class="flex-1">
              <p class="font-medium text-gray-900">{{ toast.title }}</p>
              <p v-if="toast.message" class="text-sm text-gray-600">
                {{ toast.message }}
              </p>
            </div>
            <button 
              class="text-gray-400 hover:text-gray-600"
              @click="removeToast(toast.id)"
            >
              <X :size="16" />
            </button>
          </div>
        </div>
      </transition-group>
    </div>
  </teleport>
</template>

<script setup>
import { computed } from 'vue'
import { Check, AlertTriangle, X as XIcon, Info } from 'lucide-vue-next'
import { useToastStore } from '@/stores/toastStore'

const toastStore = useToastStore()
const toasts = computed(() => toastStore.toasts)

const getIcon = (type) => {
  const icons = {
    success: Check,
    warning: AlertTriangle,
    error: XIcon,
    info: Info
  }
  return icons[type] || Info
}

const removeToast = (id) => {
  toastStore.removeToast(id)
}
</script>

<style scoped>
.toast-container {
  @apply fixed top-4 right-4 z-50 flex flex-col gap-2;
}

.toast {
  @apply bg-white border border-gray-200 rounded-lg shadow-xl p-4 max-w-md;
  @apply border-l-4;
}

.toast-success {
  @apply border-l-green-500;
}

.toast-warning {
  @apply border-l-yellow-500;
}

.toast-error {
  @apply border-l-red-500;
}

.toast-info {
  @apply border-l-blue-500;
}

.toast-icon {
  @apply w-8 h-8 rounded-full flex items-center justify-center text-white;
}

.toast-success .toast-icon {
  @apply bg-green-500;
}

.toast-warning .toast-icon {
  @apply bg-yellow-500;
}

.toast-error .toast-icon {
  @apply bg-red-500;
}

.toast-info .toast-icon {
  @apply bg-blue-500;
}

/* –ê–Ω–∏–º–∞—Ü–∏–∏ */
.toast-enter-active,
.toast-leave-active {
  transition: all 0.3s ease;
}

.toast-enter-from {
  opacity: 0;
  transform: translateX(100%);
}

.toast-leave-to {
  opacity: 0;
  transform: translateX(100%);
}

.toast-move {
  transition: transform 0.3s ease;
}
</style>