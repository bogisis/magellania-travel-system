// src/services/errorHandler.js

/**
 * –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
 * –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫ –≤–æ –≤—Å–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
 */

// –¢–∏–ø—ã –æ—à–∏–±–æ–∫
export const ErrorTypes = {
  VALIDATION: 'validation',
  NETWORK: 'network',
  DATABASE: 'database',
  AUTH: 'auth',
  PERMISSION: 'permission',
  BUSINESS_LOGIC: 'business_logic',
  UNKNOWN: 'unknown',
}

// –£—Ä–æ–≤–Ω–∏ —Å–µ—Ä—å–µ–∑–Ω–æ—Å—Ç–∏ –æ—à–∏–±–æ–∫
export const ErrorSeverity = {
  LOW: 'low',
  MEDIUM: 'medium',
  HIGH: 'high',
  CRITICAL: 'critical',
}

// –ö–ª–∞—Å—Å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
export class ErrorHandler {
  constructor() {
    this.errorQueue = []
    this.maxQueueSize = 100
    this.isReporting = false
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏
   * @param {Error} error - –û–±—ä–µ–∫—Ç –æ—à–∏–±–∫–∏
   * @param {string} context - –ö–æ–Ω—Ç–µ–∫—Å—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞
   * @param {Object} options - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏
   */
  static handle(error, context = 'unknown', options = {}) {
    const errorInfo = this.analyzeError(error, context, options)

    // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
    this.logError(errorInfo)

    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –æ—á–µ—Ä–µ–¥—å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    this.addToQueue(errorInfo)

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    this.showUserNotification(errorInfo)

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ —Å–∏—Å—Ç–µ–º—É –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ (–µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞)
    this.reportToMonitoring(errorInfo)

    return errorInfo
  }

  /**
   * –ê–Ω–∞–ª–∏–∑ –æ—à–∏–±–∫–∏ –∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –µ—ë —Ç–∏–ø–∞
   * @param {Error} error - –û–±—ä–µ–∫—Ç –æ—à–∏–±–∫–∏
   * @param {string} context - –ö–æ–Ω—Ç–µ–∫—Å—Ç
   * @param {Object} options - –û–ø—Ü–∏–∏
   * @returns {Object} –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—à–∏–±–∫–µ
   */
  static analyzeError(error, context, options = {}) {
    const errorInfo = {
      id: this.generateErrorId(),
      timestamp: new Date().toISOString(),
      message: error.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞',
      stack: error.stack,
      context,
      type: this.determineErrorType(error),
      severity: this.determineSeverity(error, context),
      userAgent: navigator.userAgent,
      url: window.location.href,
      userId: options.userId || 'anonymous',
      sessionId: this.getSessionId(),
      additionalData: options.additionalData || {},
      retryable: this.isRetryable(error),
      ...options,
    }

    return errorInfo
  }

  /**
   * –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –æ—à–∏–±–∫–∏
   * @param {Error} error - –û–±—ä–µ–∫—Ç –æ—à–∏–±–∫–∏
   * @returns {string} –¢–∏–ø –æ—à–∏–±–∫–∏
   */
  static determineErrorType(error) {
    const message = error.message?.toLowerCase() || ''
    const name = error.name?.toLowerCase() || ''

    // –°–µ—Ç–µ–≤—ã–µ –æ—à–∏–±–∫–∏
    if (name.includes('network') || message.includes('fetch') || message.includes('http')) {
      return ErrorTypes.NETWORK
    }

    // –û—à–∏–±–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    if (name.includes('dexie') || message.includes('database') || message.includes('indexeddb')) {
      return ErrorTypes.DATABASE
    }

    // –û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    if (
      name.includes('validation') ||
      message.includes('invalid') ||
      message.includes('required')
    ) {
      return ErrorTypes.VALIDATION
    }

    // –û—à–∏–±–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    if (
      name.includes('auth') ||
      message.includes('unauthorized') ||
      message.includes('forbidden')
    ) {
      return ErrorTypes.AUTH
    }

    // –û—à–∏–±–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
    if (message.includes('permission') || message.includes('access denied')) {
      return ErrorTypes.PERMISSION
    }

    return ErrorTypes.UNKNOWN
  }

  /**
   * –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–µ—Ä—å–µ–∑–Ω–æ—Å—Ç–∏ –æ—à–∏–±–∫–∏
   * @param {Error} error - –û–±—ä–µ–∫—Ç –æ—à–∏–±–∫–∏
   * @param {string} context - –ö–æ–Ω—Ç–µ–∫—Å—Ç
   * @returns {string} –£—Ä–æ–≤–µ–Ω—å —Å–µ—Ä—å–µ–∑–Ω–æ—Å—Ç–∏
   */
  static determineSeverity(error, context) {
    const type = this.determineErrorType(error)
    const message = error.message?.toLowerCase() || ''

    // –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏
    if (type === ErrorTypes.DATABASE && message.includes('corrupt')) {
      return ErrorSeverity.CRITICAL
    }

    if (type === ErrorTypes.AUTH && context.includes('login')) {
      return ErrorSeverity.CRITICAL
    }

    // –í—ã—Å–æ–∫–∏–µ –æ—à–∏–±–∫–∏
    if (type === ErrorTypes.NETWORK && context.includes('save')) {
      return ErrorSeverity.HIGH
    }

    if (type === ErrorTypes.DATABASE && context.includes('save')) {
      return ErrorSeverity.HIGH
    }

    // –°—Ä–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏
    if (type === ErrorTypes.VALIDATION) {
      return ErrorSeverity.MEDIUM
    }

    // –ù–∏–∑–∫–∏–µ –æ—à–∏–±–∫–∏
    if (type === ErrorTypes.UNKNOWN) {
      return ErrorSeverity.LOW
    }

    return ErrorSeverity.MEDIUM
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏
   * @param {Error} error - –û–±—ä–µ–∫—Ç –æ—à–∏–±–∫–∏
   * @returns {boolean} –ú–æ–∂–Ω–æ –ª–∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å
   */
  static isRetryable(error) {
    const type = this.determineErrorType(error)
    const message = error.message?.toLowerCase() || ''

    // –°–µ—Ç–µ–≤—ã–µ –æ—à–∏–±–∫–∏ –æ–±—ã—á–Ω–æ –º–æ–∂–Ω–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å
    if (type === ErrorTypes.NETWORK) {
      return true
    }

    // –û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –Ω–µ–ª—å–∑—è –ø–æ–≤—Ç–æ—Ä–∏—Ç—å
    if (type === ErrorTypes.VALIDATION) {
      return false
    }

    // –û—à–∏–±–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ–ª—å–∑—è –ø–æ–≤—Ç–æ—Ä–∏—Ç—å
    if (type === ErrorTypes.AUTH) {
      return false
    }

    return false
  }

  /**
   * –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª—å
   * @param {Object} errorInfo - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—à–∏–±–∫–µ
   */
  static logError(errorInfo) {
    const logMessage = `[${errorInfo.severity.toUpperCase()}] ${errorInfo.type}: ${errorInfo.message}`
    const logData = {
      ...errorInfo,
      context: errorInfo.context,
    }

    switch (errorInfo.severity) {
      case ErrorSeverity.CRITICAL:
        console.error(logMessage, logData)
        break
      case ErrorSeverity.HIGH:
        console.error(logMessage, logData)
        break
      case ErrorSeverity.MEDIUM:
        console.warn(logMessage, logData)
        break
      case ErrorSeverity.LOW:
        console.info(logMessage, logData)
        break
      default:
        console.log(logMessage, logData)
    }
  }

  /**
   * –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–∫–∏ –≤ –æ—á–µ—Ä–µ–¥—å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
   * @param {Object} errorInfo - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—à–∏–±–∫–µ
   */
  static addToQueue(errorInfo) {
    if (!this.errorQueue) {
      this.errorQueue = []
    }

    this.errorQueue.push(errorInfo)

    // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –æ—á–µ—Ä–µ–¥–∏
    if (this.errorQueue.length > this.maxQueueSize) {
      this.errorQueue.shift()
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—á–µ—Ä–µ–¥—å, –µ—Å–ª–∏ –æ–Ω–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–æ–ª—å—à–∞—è
    if (this.errorQueue.length >= 10 && !this.isReporting) {
      this.flushQueue()
    }
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—á–µ—Ä–µ–¥–∏ –æ—à–∏–±–æ–∫
   */
  static async flushQueue() {
    if (this.isReporting || this.errorQueue.length === 0) {
      return
    }

    this.isReporting = true

    try {
      const errorsToSend = [...this.errorQueue]
      this.errorQueue = []

      // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤ —Å–∏—Å—Ç–µ–º—É –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
      // –ù–∞–ø—Ä–∏–º–µ—Ä, Sentry, LogRocket, –∏–ª–∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞
      await this.sendToMonitoring(errorsToSend)
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—à–∏–±–æ–∫ –≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:', error)
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫–∏ –≤ –æ—á–µ—Ä–µ–¥—å
      this.errorQueue.unshift(...this.errorQueue)
    } finally {
      this.isReporting = false
    }
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—à–∏–±–æ–∫ –≤ —Å–∏—Å—Ç–µ–º—É –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
   * @param {Array} errors - –ú–∞—Å—Å–∏–≤ –æ—à–∏–±–æ–∫
   */
  static async sendToMonitoring(errors) {
    // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —Å–∏—Å—Ç–µ–º—É –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Sentry, LogRocket –∏ —Ç.–¥.

    if (process.env.NODE_ENV === 'development') {
      console.group('üìä –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—à–∏–±–æ–∫ –≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥')
      errors.forEach((error) => {
        console.log(`- ${error.type}: ${error.message} (${error.context})`)
      })
      console.groupEnd()
    }

    // –ò–º–∏—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É
    await new Promise((resolve) => setTimeout(resolve, 100))
  }

  /**
   * –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
   * @param {Object} errorInfo - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—à–∏–±–∫–µ
   */
  static showUserNotification(errorInfo) {
    // –ü–æ–ª—É—á–∞–µ–º toast store, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω
    const toastStore = window.$toast || this.getToastStore()

    if (!toastStore) {
      // Fallback: –ø–æ–∫–∞–∑—ã–≤–∞–µ–º alert –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫
      if (errorInfo.severity === ErrorSeverity.CRITICAL) {
        alert(`–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${errorInfo.message}`)
      }
      return
    }

    const notificationConfig = this.getNotificationConfig(errorInfo)

    toastStore.addToast({
      type: notificationConfig.type,
      title: notificationConfig.title,
      message: notificationConfig.message,
      duration: notificationConfig.duration,
      actions: notificationConfig.actions,
    })
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
   * @param {Object} errorInfo - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—à–∏–±–∫–µ
   * @returns {Object} –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
   */
  static getNotificationConfig(errorInfo) {
    const configs = {
      [ErrorTypes.VALIDATION]: {
        type: 'warning',
        title: '–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏',
        message: errorInfo.message,
        duration: 5000,
      },
      [ErrorTypes.NETWORK]: {
        type: 'error',
        title: '–û—à–∏–±–∫–∞ —Å–µ—Ç–∏',
        message: '–ü—Ä–æ–±–ª–µ–º–∞ —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ —Å–µ—Ä–≤–µ—Ä—É. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.',
        duration: 0,
        actions: [
          {
            label: '–ü–æ–≤—Ç–æ—Ä–∏—Ç—å',
            action: () => this.retryLastAction(),
          },
        ],
      },
      [ErrorTypes.DATABASE]: {
        type: 'error',
        title: '–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö',
        message: '–ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.',
        duration: 0,
      },
      [ErrorTypes.AUTH]: {
        type: 'error',
        title: '–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏',
        message: '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É.',
        duration: 0,
        actions: [
          {
            label: '–í–æ–π—Ç–∏',
            action: () => this.redirectToLogin(),
          },
        ],
      },
      [ErrorTypes.PERMISSION]: {
        type: 'error',
        title: '–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω',
        message: '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è.',
        duration: 5000,
      },
      [ErrorTypes.BUSINESS_LOGIC]: {
        type: 'warning',
        title: '–û—à–∏–±–∫–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏',
        message: errorInfo.message,
        duration: 5000,
      },
      [ErrorTypes.UNKNOWN]: {
        type: 'error',
        title: '–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞',
        message: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.',
        duration: 0,
      },
    }

    return configs[errorInfo.type] || configs[ErrorTypes.UNKNOWN]
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ toast store
   * @returns {Object|null} Toast store
   */
  static getToastStore() {
    // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å toast store –∏–∑ —Ä–∞–∑–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
    if (window.$toast) {
      return window.$toast
    }

    // –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Pinia
    try {
      const { useToastStore } = require('@/stores/toastStore')
      return useToastStore()
    } catch (error) {
      return null
    }
  }

  /**
   * –ü–æ–≤—Ç–æ—Ä –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è
   */
  static retryLastAction() {
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è
    console.log('–ü–æ–≤—Ç–æ—Ä –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è')
    window.location.reload()
  }

  /**
   * –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
   */
  static redirectToLogin() {
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
    console.log('–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞')
    window.location.href = '/login'
  }

  /**
   * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ ID –æ—à–∏–±–∫–∏
   * @returns {string} –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID
   */
  static generateErrorId() {
    return `error_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ ID —Å–µ—Å—Å–∏–∏
   * @returns {string} ID —Å–µ—Å—Å–∏–∏
   */
  static getSessionId() {
    let sessionId = sessionStorage.getItem('magellania_session_id')
    if (!sessionId) {
      sessionId = `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`
      sessionStorage.setItem('magellania_session_id', sessionId)
    }
    return sessionId
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—à–∏–±–∫–∏ –≤ —Å–∏—Å—Ç–µ–º—É –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
   * @param {Object} errorInfo - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—à–∏–±–∫–µ
   */
  static reportToMonitoring(errorInfo) {
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∏ –≤—ã—Å–æ–∫–∏–µ –æ—à–∏–±–∫–∏
    if (
      errorInfo.severity === ErrorSeverity.CRITICAL ||
      errorInfo.severity === ErrorSeverity.HIGH
    ) {
      this.sendToMonitoring([errorInfo])
    }
  }

  /**
   * –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π –æ—à–∏–±–∫–∏
   * @param {string} message - –°–æ–æ–±—â–µ–Ω–∏–µ –æ—à–∏–±–∫–∏
   * @param {string} type - –¢–∏–ø –æ—à–∏–±–∫–∏
   * @param {Object} options - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏
   * @returns {Error} –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –æ—à–∏–±–∫–∞
   */
  static createError(message, type = ErrorTypes.UNKNOWN, options = {}) {
    const error = new Error(message)
    error.name = type
    error.isCustom = true
    error.options = options
    return error
  }

  /**
   * –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —Å –≤–æ–∑–≤—Ä–∞—Ç–æ–º –æ—à–∏–±–æ–∫
   * @param {Object} data - –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏
   * @param {Object} schema - –°—Ö–µ–º–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
   * @returns {Array} –ú–∞—Å—Å–∏–≤ –æ—à–∏–±–æ–∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
   */
  static validateData(data, schema) {
    const errors = []

    for (const [field, rules] of Object.entries(schema)) {
      const value = data[field]

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
      if (rules.required && (value === undefined || value === null || value === '')) {
        errors.push(
          this.createError(
            `–ü–æ–ª–µ "${rules.label || field}" –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è`,
            ErrorTypes.VALIDATION,
            { field, rule: 'required' },
          ),
        )
        continue
      }

      if (value === undefined || value === null || value === '') {
        continue // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø—É—Å—Ç—ã–µ –ø–æ–ª—è
      }

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞
      if (rules.type && typeof value !== rules.type) {
        errors.push(
          this.createError(
            `–ü–æ–ª–µ "${rules.label || field}" –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ç–∏–ø–∞ ${rules.type}`,
            ErrorTypes.VALIDATION,
            { field, rule: 'type', expected: rules.type, actual: typeof value },
          ),
        )
      }

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω—ã —Å—Ç—Ä–æ–∫–∏
      if (rules.minLength && value.length < rules.minLength) {
        errors.push(
          this.createError(
            `–ü–æ–ª–µ "${rules.label || field}" –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º ${rules.minLength} —Å–∏–º–≤–æ–ª–æ–≤`,
            ErrorTypes.VALIDATION,
            { field, rule: 'minLength', expected: rules.minLength, actual: value.length },
          ),
        )
      }

      if (rules.maxLength && value.length > rules.maxLength) {
        errors.push(
          this.createError(
            `–ü–æ–ª–µ "${rules.label || field}" –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∞–∫—Å–∏–º—É–º ${rules.maxLength} —Å–∏–º–≤–æ–ª–æ–≤`,
            ErrorTypes.VALIDATION,
            { field, rule: 'maxLength', expected: rules.maxLength, actual: value.length },
          ),
        )
      }

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–∏—Å–ª–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
      if (rules.min !== undefined && value < rules.min) {
        errors.push(
          this.createError(
            `–ü–æ–ª–µ "${rules.label || field}" –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ ${rules.min}`,
            ErrorTypes.VALIDATION,
            { field, rule: 'min', expected: rules.min, actual: value },
          ),
        )
      }

      if (rules.max !== undefined && value > rules.max) {
        errors.push(
          this.createError(
            `–ü–æ–ª–µ "${rules.label || field}" –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ –±–æ–ª–µ–µ ${rules.max}`,
            ErrorTypes.VALIDATION,
            { field, rule: 'max', expected: rules.max, actual: value },
          ),
        )
      }

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è
      if (rules.pattern && !rules.pattern.test(value)) {
        errors.push(
          this.createError(
            `–ü–æ–ª–µ "${rules.label || field}" –∏–º–µ–µ—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç`,
            ErrorTypes.VALIDATION,
            { field, rule: 'pattern', pattern: rules.pattern.toString() },
          ),
        )
      }

      // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è
      if (rules.validate) {
        const customError = rules.validate(value, data)
        if (customError) {
          errors.push(
            this.createError(customError, ErrorTypes.VALIDATION, { field, rule: 'custom' }),
          )
        }
      }
    }

    return errors
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –º–µ—Ç–æ–¥—ã –∫–∞–∫ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
export const handleError = ErrorHandler.handle.bind(ErrorHandler)
export const createError = ErrorHandler.createError.bind(ErrorHandler)
export const validateData = ErrorHandler.validateData.bind(ErrorHandler)

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫
window.addEventListener('error', (event) => {
  ErrorHandler.handle(event.error, 'unhandled', {
    additionalData: {
      filename: event.filename,
      lineno: event.lineno,
      colno: event.colno,
    },
  })
})

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –ø—Ä–æ–º–∏—Å–æ–≤
window.addEventListener('unhandledrejection', (event) => {
  ErrorHandler.handle(event.reason, 'unhandled-promise', {
    additionalData: {
      promise: event.promise,
    },
  })
})

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
export default ErrorHandler
