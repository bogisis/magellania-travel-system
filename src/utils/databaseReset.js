// –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
export const forceResetDatabase = async () => {
  console.log('üö® –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...')

  try {
    // 1. –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
    if (window.db && typeof window.db.close === 'function') {
      await window.db.close()
      console.log('‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ')
    }

    // 2. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö
    const databases = await indexedDB.databases()
    console.log(
      'üìã –ù–∞–π–¥–µ–Ω–Ω—ã–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:',
      databases.map((db) => db.name),
    )

    // 3. –£–¥–∞–ª—è–µ–º –≤—Å–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å Magellania
    const magellaniaDBs = databases.filter(
      (db) =>
        db.name.toLowerCase().includes('magellania') ||
        db.name.toLowerCase().includes('travel') ||
        db.name.toLowerCase().includes('dexie'),
    )

    console.log(
      'üóëÔ∏è –£–¥–∞–ª—è–µ–º –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:',
      magellaniaDBs.map((db) => db.name),
    )

    for (const db of magellaniaDBs) {
      try {
        await indexedDB.deleteDatabase(db.name)
        console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–∞ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: ${db.name}`)
      } catch (error) {
        console.warn(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å ${db.name}:`, error.message)
      }
    }

    // 4. –û—á–∏—â–∞–µ–º localStorage –∏ sessionStorage
    try {
      localStorage.clear()
      sessionStorage.clear()
      console.log('‚úÖ –û—á–∏—â–µ–Ω—ã localStorage –∏ sessionStorage')
    } catch (error) {
      console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å storage:', error.message)
    }

    // 5. –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞
    if ('caches' in window) {
      try {
        const cacheNames = await caches.keys()
        for (const cacheName of cacheNames) {
          if (cacheName.includes('magellania') || cacheName.includes('vite')) {
            await caches.delete(cacheName)
            console.log(`‚úÖ –£–¥–∞–ª–µ–Ω –∫—ç—à: ${cacheName}`)
          }
        }
      } catch (error) {
        console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å –∫—ç—à:', error.message)
      }
    }

    console.log('‚úÖ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞')
    console.log('üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã...')

    // 6. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
    setTimeout(() => {
      window.location.reload()
    }, 2000)
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ:', error)

    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
    console.log('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞...')
    window.location.reload()
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
export const checkDatabaseHealth = async () => {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...')

  try {
    const databases = await indexedDB.databases()
    const magellaniaDBs = databases.filter(
      (db) =>
        db.name.toLowerCase().includes('magellania') || db.name.toLowerCase().includes('travel'),
    )

    console.log('üìä –ù–∞–π–¥–µ–Ω–æ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö Magellania:', magellaniaDBs.length)
    magellaniaDBs.forEach((db) => {
      console.log(`  - ${db.name} (–≤–µ—Ä—Å–∏—è: ${db.version})`)
    })

    return magellaniaDBs.length === 0
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏:', error)
    return false
  }
}
